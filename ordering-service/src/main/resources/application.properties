# 应用名称
spring.application.name=ordering-service
#激活的环境：dev或test
spring.profiles.active=dev

#RocketMQ NameServer地址，多个nameserver地址采用";"分隔
rocketmq.name-server=127.0.0.1:9876
#rocketmq.name-server=127.0.0.1:9876;192.168.31.173:9876
#消息生产者组名
rocketmq.producer.group=producer-group

#数据库名db0
spring.redis.database=0
# Redis服务器地址
spring.redis.host=127.0.0.1
# Redis服务器连接端口
spring.redis.port=6379
# Redis服务器连接密码（默认为空）
spring.redis.password=


spring.cloud.nacos.config.file-extension=properties
spring.cloud.nacos.config.server-addr=localhost:8848
#定义同组中所有微服务的共享配置；[n]的值越大，优先级越高
spring.cloud.nacos.config.extension-configs[0].data-id=common.properties
spring.cloud.nacos.config.extension-configs[0].refresh=true
#以下是默认配置（public的命名空间ID和DEFAULT_GROUP）
spring.cloud.nacos.config.namespace=
spring.cloud.nacos.config.group=DEFAULT_GROUP

feign.sentinel.enabled=true

#配置Sentinel DashBoard地址
spring.cloud.sentinel.transport.dashboard=localhost:8080
#配置Sentinel规则持久化(存储到Nacos的JSON格式配置文件中)
spring.cloud.sentinel.datasource.ds1.nacos.server-addr=localhost:8848
spring.cloud.sentinel.datasource.ds1.nacos.username=nacos
spring.cloud.sentinel.datasource.ds1.nacos.password=nacos
spring.cloud.sentinel.datasource.ds1.nacos.data-id=${spring.application.name}.json
spring.cloud.sentinel.datasource.ds1.nacos.group-id=DEFAULT_GROUP
spring.cloud.sentinel.datasource.ds1.nacos.data-type=json
spring.cloud.sentinel.datasource.ds1.nacos.rule-type=flow
#关闭sentinel对该服务controller的url的保护
spring.cloud.sentinel.filter.enabled=true


spring.cloud.alibaba.seata.tx-service-group=my_test_tx_group
